print("Hello !");

# Ключевые слова Python,описание
# False ложь
# True правда
# None  «пустой» объект
# and	логическое И
# with / as	менеджер контекста
# assert условие	возбуждает исключение, если условие ложно
# break	выход из цикла
# class	пользовательский тип, состоящий из методов и атрибутов
# continue	переход на следующую итерацию цикла
# def	определение функции
# del	удаление объекта
# elif	в противном случае, если
# else	иначе
# except	перехватить исключение
# finally	вместе с инструкцией try, выполняет инструкции независимо от того, было ли исключение или нет
# for	цикл for
# from	импорт нескольких функций из модуля
# global	позволяет сделать значение переменной, присвоенное ей внутри функции, доступным и за пределами этой функции
# if	если
# import	импорт модуля
# in	проверка на вхождение
# is	ссылаются ли 2 объекта на одно и то же место в памяти
# lambda	определение анонимной функции
# nonlocal	позволяет сделать значение переменной, присвоенное ей внутри функции, доступным в объемлющей инструкции
# not	логическое НЕ
# or	логическое ИЛИ
# pass	ничего не делающая конструкция
# raise	возбудить исключение
# return	вернуть результат
# try	выполнить инструкции, перехватывая исключения
# while	цикл while
# yield	определение функции-генератора

# 1) Создать переменную типа String

st = 'Jeka'
print(type(st), st);

# 2) Создать переменную типа Integer

i = 10
print(type(i), i);

# 3) Создать переменную типа Float

f = 2.7
print(type(f), f);

# 4) Создать переменную типа Bytes

b = bytes([27, 12, 75])
print(type(b), b);

#5) Создать переменную типа List

l = [st, f, b]
print(type(l), l)

# 6) Создать переменную типа Tuple

t = (st, f, 1.2, 45)
print(type(t), t)

# 7) Создать переменную типа Set

s = {st,i, 1.2, 45}
print(type(s), s)

# 8) Создать переменную типа Frozen set

fro = frozenset({st, i, 1.2})
print(type(fro), fro)

#9) Создать переменную типа Dict

d = {'value':5, 'key':5}
print(type(d), d)

# 10) Вывести в консоль все выше перечисленные переменные с добавлением типа данных.
print((type(st), st), (type(i), i), (type(f), f), (type(b), b), (type(l), l), (type(t), t), (type(s), s), (type(f), f), (type(d), d), sep='  ')

# 11) Создать 2 переменные String, создать переменную в которой сканкатенируете эти переменные.
# print('..  ' + '...  ' + '..  ')
a1 = 'Hello, '
a2 = 'my friend!'
con = a1+a2
print(con)

#12) Вывести в одну строку переменные типа String и Integer используя “,” (Запятую)
# вывести с пробелами (......, sep=' ')
print(st, i, sep=' ');

# 13) Вывести в одну строку переменные типа String и Integer используя “+” (Плюс)
print(st + str(i))











